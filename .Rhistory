fit_S = lm(S$V15 ~ S$V12)
fit_W = lm(W$V15 ~ W$V12)
fit_NE
summary(fit_NE)
fit_NE
fit_NE$coefficients[1]
fit_NE$coefficients[2]
alpha = 0.1
t = qt((1 - alpha/2), n_pop - 2, lower.tail = TRUE)
# split region
# V12: % Bachelors and V15: per capita income
region = CDI$V17 == "1"
NE = CDI[region, c("V12", "V15")]
region = CDI$V17 == "2"
NC = CDI[region, c("V12", "V15")]
region = CDI$V17 == "3"
S = CDI[region, c("V12", "V15")]
region = CDI$V17 == "4"
W = CDI[region, c("V12", "V15")]
# linear models
fit_NE = lm(NE$V15 ~ NE$V12)
fit_NC = lm(NC$V15 ~ NC$V12)
fit_S = lm(S$V15 ~ S$V12)
fit_W = lm(W$V15 ~ W$V12)
# betas
b1_NE = fit_NE$coefficients[2]
b1_NC = fit_NC$coefficients[2]
b1_S = fit_S$coefficients[2]
b1_W = fit_W$coefficients[2]
alpha = 0.1
t = qt((1 - alpha/2), n_pop - 2, lower.tail = TRUE)
# split region
# V12: % Bachelors and V15: per capita income
region = CDI$V17 == "1"
NE = CDI[region, c("V12", "V15")]
region = CDI$V17 == "2"
NC = CDI[region, c("V12", "V15")]
region = CDI$V17 == "3"
S = CDI[region, c("V12", "V15")]
region = CDI$V17 == "4"
W = CDI[region, c("V12", "V15")]
# linear models
fit_NE = lm(NE$V15 ~ NE$V12)
fit_NC = lm(NC$V15 ~ NC$V12)
fit_S = lm(S$V15 ~ S$V12)
fit_W = lm(W$V15 ~ W$V12)
# betas
b0_NE = fit_NE$coefficients[1]
b0_NC = fit_NC$coefficients[1]
b0_S = fit_S$coefficients[1]
b0_W = fit_W$coefficients[1]
b1_NE = fit_NE$coefficients[2]
b1_NC = fit_NC$coefficients[2]
b1_S = fit_S$coefficients[2]
b1_W = fit_W$coefficients[2]
alpha = 0.1
t = qt((1 - alpha/2), n_pop - 2, lower.tail = TRUE)
# split region
# V12: % Bachelors and V15: per capita income
region = CDI$V17 == "1"
NE = CDI[region, c("V12", "V15")]
region = CDI$V17 == "2"
NC = CDI[region, c("V12", "V15")]
region = CDI$V17 == "3"
S = CDI[region, c("V12", "V15")]
region = CDI$V17 == "4"
W = CDI[region, c("V12", "V15")]
# linear models
fit_NE = lm(NE$V15 ~ NE$V12)
fit_NC = lm(NC$V15 ~ NC$V12)
fit_S = lm(S$V15 ~ S$V12)
fit_W = lm(W$V15 ~ W$V12)
# betas
b0_NE = fit_NE$coefficients[1]
b0_NC = fit_NC$coefficients[1]
b0_S = fit_S$coefficients[1]
b0_W = fit_W$coefficients[1]
b1_NE = fit_NE$coefficients[2]
b1_NC = fit_NC$coefficients[2]
b1_S = fit_S$coefficients[2]
b1_W = fit_W$coefficients[2]
SSE_NE = sum( ( NE$V15 - (b0_NE + b1_NE * NE$V12) )^2 )
SSE_NE
SSE_W = sum( ( W$V15 - (b0_W + b1_W * NE$V12) )^2 )
SSE_NC = sum( ( NC$V15 - (b0_NC + b1_NC * NC$V12) )^2 )
MSE_W = SSE_W / (length(W) - 2)
MSE_NE = SSE_NE / (length(NE) - 2)
MSE_NC = SSE_NC / (length(NC) - 2)
MSE_S = SSE_S / (length(S) - 2)
alpha = 0.1
t = qt((1 - alpha/2), n_pop - 2, lower.tail = TRUE)
# split region
# V12: % Bachelors and V15: per capita income
region = CDI$V17 == "1"
NE = CDI[region, c("V12", "V15")]
region = CDI$V17 == "2"
NC = CDI[region, c("V12", "V15")]
region = CDI$V17 == "3"
S = CDI[region, c("V12", "V15")]
region = CDI$V17 == "4"
W = CDI[region, c("V12", "V15")]
# linear models
fit_NE = lm(NE$V15 ~ NE$V12)
fit_NC = lm(NC$V15 ~ NC$V12)
fit_S = lm(S$V15 ~ S$V12)
fit_W = lm(W$V15 ~ W$V12)
# betas
b0_NE = fit_NE$coefficients[1]
b0_NC = fit_NC$coefficients[1]
b0_S = fit_S$coefficients[1]
b0_W = fit_W$coefficients[1]
b1_NE = fit_NE$coefficients[2]
b1_NC = fit_NC$coefficients[2]
b1_S = fit_S$coefficients[2]
b1_W = fit_W$coefficients[2]
SSE_NE = sum( ( NE$V15 - (b0_NE + b1_NE * NE$V12) )^2 )
SSE_NC = sum( ( NC$V15 - (b0_NC + b1_NC * NC$V12) )^2 )
SSE_S = sum( ( S$V15 - (b0_S + b1_S * S$V12) )^2 )
SSE_W = sum( ( W$V15 - (b0_W + b1_W * W$V12) )^2 )
MSE_NE = SSE_NE / (length(NE) - 2)
MSE_NC = SSE_NC / (length(NC) - 2)
MSE_S = SSE_S / (length(S) - 2)
MSE_W = SSE_W / (length(W) - 2)
alpha = 0.1
t = qt((1 - alpha/2), n_pop - 2, lower.tail = TRUE)
# split region
# V12: % Bachelors and V15: per capita income
region = CDI$V17 == "1"
NE = CDI[region, c("V12", "V15")]
region = CDI$V17 == "2"
NC = CDI[region, c("V12", "V15")]
region = CDI$V17 == "3"
S = CDI[region, c("V12", "V15")]
region = CDI$V17 == "4"
W = CDI[region, c("V12", "V15")]
# linear models
fit_NE = lm(NE$V15 ~ NE$V12)
fit_NC = lm(NC$V15 ~ NC$V12)
fit_S = lm(S$V15 ~ S$V12)
fit_W = lm(W$V15 ~ W$V12)
# betas
b0_NE = fit_NE$coefficients[1]
b0_NC = fit_NC$coefficients[1]
b0_S = fit_S$coefficients[1]
b0_W = fit_W$coefficients[1]
b1_NE = fit_NE$coefficients[2]
b1_NC = fit_NC$coefficients[2]
b1_S = fit_S$coefficients[2]
b1_W = fit_W$coefficients[2]
SSE_NE = sum( ( NE$V15 - (b0_NE + b1_NE * NE$V12) )^2 )
SSE_NC = sum( ( NC$V15 - (b0_NC + b1_NC * NC$V12) )^2 )
SSE_S = sum( ( S$V15 - (b0_S + b1_S * S$V12) )^2 )
SSE_W = sum( ( W$V15 - (b0_W + b1_W * W$V12) )^2 )
MSE_NE = SSE_NE / (length(NE) - 2)
MSE_NC = SSE_NC / (length(NC) - 2)
MSE_S = SSE_S / (length(S) - 2)
MSE_W = SSE_W / (length(W) - 2)
length(NE)
nrows(NE)
nrow(NE)
t_NE = qt(1 - alpha/2, nrow(NE) - 2)
t_NE
# split region
# V12: % Bachelors and V15: per capita income
region = CDI$V17 == "1"
NE = CDI[region, c("V12", "V15")]
region = CDI$V17 == "2"
NC = CDI[region, c("V12", "V15")]
region = CDI$V17 == "3"
S = CDI[region, c("V12", "V15")]
region = CDI$V17 == "4"
W = CDI[region, c("V12", "V15")]
# linear models
fit_NE = lm(NE$V15 ~ NE$V12)
fit_NC = lm(NC$V15 ~ NC$V12)
fit_S = lm(S$V15 ~ S$V12)
fit_W = lm(W$V15 ~ W$V12)
# betas
b0_NE = fit_NE$coefficients[1]
b0_NC = fit_NC$coefficients[1]
b0_S = fit_S$coefficients[1]
b0_W = fit_W$coefficients[1]
b1_NE = fit_NE$coefficients[2]
b1_NC = fit_NC$coefficients[2]
b1_S = fit_S$coefficients[2]
b1_W = fit_W$coefficients[2]
# SSEs
SSE_NE = sum( ( NE$V15 - (b0_NE + b1_NE * NE$V12) )^2 )
SSE_NC = sum( ( NC$V15 - (b0_NC + b1_NC * NC$V12) )^2 )
SSE_S = sum( ( S$V15 - (b0_S + b1_S * S$V12) )^2 )
SSE_W = sum( ( W$V15 - (b0_W + b1_W * W$V12) )^2 )
# MSEs
MSE_NE = SSE_NE / (nrow(NE) - 2)
MSE_NC = SSE_NC / (nrow(NC) - 2)
MSE_S = SSE_S / (nrow(S) - 2)
MSE_W = SSE_W / (nrow(W) - 2)
# t vals
alpha = 0.1
t_NE = qt(1 - alpha/2, nrow(NE) - 2)
t_NC = qt(1 - alpha/2, nrow(NC) - 2)
t_S = qt(1 - alpha/2, nrow(S) - 2)
t_W = qt(1 - alpha/2, nrow(W) - 2)
t_*
;;;
# SEs
SE_NE = sqrt( MSE_NE / sum( (NE$V12 - mean(NE$V12) )^2) )
SE_NE
# split region
# V12: % Bachelors and V15: per capita income
region = CDI$V17 == "1"
NE = CDI[region, c("V12", "V15")]
region = CDI$V17 == "2"
NC = CDI[region, c("V12", "V15")]
region = CDI$V17 == "3"
S = CDI[region, c("V12", "V15")]
region = CDI$V17 == "4"
W = CDI[region, c("V12", "V15")]
# linear models
fit_NE = lm(NE$V15 ~ NE$V12)
fit_NC = lm(NC$V15 ~ NC$V12)
fit_S = lm(S$V15 ~ S$V12)
fit_W = lm(W$V15 ~ W$V12)
# betas
b0_NE = fit_NE$coefficients[1]
b0_NC = fit_NC$coefficients[1]
b0_S = fit_S$coefficients[1]
b0_W = fit_W$coefficients[1]
b1_NE = fit_NE$coefficients[2]
b1_NC = fit_NC$coefficients[2]
b1_S = fit_S$coefficients[2]
b1_W = fit_W$coefficients[2]
# SSEs
SSE_NE = sum( ( NE$V15 - (b0_NE + b1_NE * NE$V12) )^2 )
SSE_NC = sum( ( NC$V15 - (b0_NC + b1_NC * NC$V12) )^2 )
SSE_S = sum( ( S$V15 - (b0_S + b1_S * S$V12) )^2 )
SSE_W = sum( ( W$V15 - (b0_W + b1_W * W$V12) )^2 )
# MSEs
MSE_NE = SSE_NE / (nrow(NE) - 2)
MSE_NC = SSE_NC / (nrow(NC) - 2)
MSE_S = SSE_S / (nrow(S) - 2)
MSE_W = SSE_W / (nrow(W) - 2)
# t vals
alpha = 0.1
t_NE = qt(1 - alpha/2, nrow(NE) - 2)
t_NC = qt(1 - alpha/2, nrow(NC) - 2)
t_S = qt(1 - alpha/2, nrow(S) - 2)
t_W = qt(1 - alpha/2, nrow(W) - 2)
# SEs
SE_NE = sqrt( MSE_NE / sum( (NE$V12 - mean(NE$V12) )^2) )
SE_NC = sqrt( MSE_NC / sum( (NC$V12 - mean(NC$V12) )^2) )
SE_S = sqrt( MSE_S / sum( (S$V12 - mean(S$V12) )^2) )
SE_W = sqrt( MSE_W / sum( (W$V12 - mean(W$V12) )^2) )
SE_NE
SE_NE; SE_NC
SE_NE; SE_NC; SE_S; SE_W
CI_NE[0] = 1
CI_NE = list(2)
CI_NE[1]
CI_NE
t_NE; t_NC; t_S; t_W
NE_up = b1_NE + t_NE * SE_NE
NE_lo = b1_NE - t_NE * SE_NE
NE_up; NE_lo
NE_up
b1_NE
NE_lo
b1_NE
NE_up
NE_lo
NE_up = b1_NE + t_NE * SE_NE
NE_lo = b1_NE - t_NE * SE_NE
NC_up = b1_NC + t_NC * SE_NC
NC_lo = b1_NC - t_NC * SE_NC
S_up = b1_S + t_S * SE_S
S_lo = b1_S - t_S * SE_S
W_up = b1_W + t_W * SE_W
W_lo = b1_W - t_W * SE_W
NE_up, NE_lo
NE_up; NE_lo
# print CIs
sprintf("[%.3f, %.3f]", NE_lo, NE_up)
# print CIs
sprintf("NE(1): [%.3f, %.3f]", NE_lo, NE_up)
sprintf("NE(1): [%.3f, %.3f]", NE_lo, NE_up)
sprintf("NC(2): [%.3f, %.3f]", NC_lo, NC_up)
sprintf("S(3): [%.3f, %.3f]", S_lo, S_up)
sprintf("W(4): [%.3f, %.3f]", W_lo, W_up)
sprintf("NE(1): [%.3f, %.3f]", NE_lo, NE_up)
sprintf("NC(2): [%.3f, %.3f]", NC_lo, NC_up)
sprintf("S (3): [%.3f, %.3f]", S_lo, S_up)
sprintf("W (4): [%.3f, %.3f]", W_lo, W_up)
kable(anova(fit_NE))
library kable
library(knitr)
kable(anova(fit_NE))
SSE_NE
x = kable(anova(fit_NE))
x
x[2]
x[3]
x[3,1]
x[3,2]
x[3,3]
x[3]
?kable
fit_NE
fit_NE$terms
?lm
fit_NE = lm(per_capita_income ~ NE$V12)
# linear models
per_capita_income = NE$V15
fit_NE = lm(per_capita_income ~ NE$V12)
kable(anove(fit_NE))
kable(anova(fit_NE))
bachelors = NE$V12
fit_NE = lm([NE$V15 ~ bachelors)
bachelors = NE$V12
fit_NE = lm(NE$V15 ~ bachelors)
kable(anova(fit_NE))
# split region
# V12: % Bachelors and V15: per capita income
region = CDI$V17 == "1"
NE = CDI[region, c("V12", "V15")]
region = CDI$V17 == "2"
NC = CDI[region, c("V12", "V15")]
region = CDI$V17 == "3"
S = CDI[region, c("V12", "V15")]
region = CDI$V17 == "4"
W = CDI[region, c("V12", "V15")]
# linear models
fit_NE = lm(NE$V15 ~ NE$V12)
fit_NC = lm(NC$V15 ~ NC$V12)
fit_S = lm(S$V15 ~ S$V12)
fit_W = lm(W$V15 ~ W$V12)
# betas
b0_NE = fit_NE$coefficients[1]
b0_NC = fit_NC$coefficients[1]
b0_S = fit_S$coefficients[1]
b0_W = fit_W$coefficients[1]
b1_NE = fit_NE$coefficients[2]
b1_NC = fit_NC$coefficients[2]
b1_S = fit_S$coefficients[2]
b1_W = fit_W$coefficients[2]
# SSEs
SSE_NE = sum( ( NE$V15 - (b0_NE + b1_NE * NE$V12) )^2 )
SSE_NC = sum( ( NC$V15 - (b0_NC + b1_NC * NC$V12) )^2 )
SSE_S = sum( ( S$V15 - (b0_S + b1_S * S$V12) )^2 )
SSE_W = sum( ( W$V15 - (b0_W + b1_W * W$V12) )^2 )
# MSEs
MSE_NE = SSE_NE / (nrow(NE) - 2)
MSE_NC = SSE_NC / (nrow(NC) - 2)
MSE_S = SSE_S / (nrow(S) - 2)
MSE_W = SSE_W / (nrow(W) - 2)
# t vals
alpha = 0.1
t_NE = qt(1 - alpha/2, nrow(NE) - 2)
t_NC = qt(1 - alpha/2, nrow(NC) - 2)
t_S = qt(1 - alpha/2, nrow(S) - 2)
t_W = qt(1 - alpha/2, nrow(W) - 2)
# SEs
SE_NE = sqrt( MSE_NE / sum( (NE$V12 - mean(NE$V12) )^2) )
SE_NC = sqrt( MSE_NC / sum( (NC$V12 - mean(NC$V12) )^2) )
SE_S = sqrt( MSE_S / sum( (S$V12 - mean(S$V12) )^2) )
SE_W = sqrt( MSE_W / sum( (W$V12 - mean(W$V12) )^2) )
#  CIs
NE_up = b1_NE + t_NE * SE_NE
NE_lo = b1_NE - t_NE * SE_NE
NC_up = b1_NC + t_NC * SE_NC
NC_lo = b1_NC - t_NC * SE_NC
S_up = b1_S + t_S * SE_S
S_lo = b1_S - t_S * SE_S
W_up = b1_W + t_W * SE_W
W_lo = b1_W - t_W * SE_W
# print CIs
sprintf("NE(1): [%.3f, %.3f]", NE_lo, NE_up)
sprintf("NC(2): [%.3f, %.3f]", NC_lo, NC_up)
sprintf("S (3): [%.3f, %.3f]", S_lo, S_up)
sprintf("W (4): [%.3f, %.3f]", W_lo, W_up)
anova(fit_NE)
a = anova(fit_NE)
summary(a)
a
# SSRs
SSR_NE = sum( ( (b0_NE + b1_NE * NE$V12) - mean(NE$V15) )^2 )
SSR_NC = sum( ( (b0_NC + b1_NC * NC$V12) - mean(NC$V15) )^2 )
SSR_S = sum( ( (b0_S + b1_S * S$V12) - mean(S$V15) )^2 )
SSR_W = sum( ( (b0_W + b1_W * W$V12) - mean(W$V15) )^2 )
# SSRs
SSR_NE = sum( ( (b0_NE + b1_NE * NE$V12) - mean(NE$V15) )^2 )
SSR_NC = sum( ( (b0_NC + b1_NC * NC$V12) - mean(NC$V15) )^2 )
SSR_S = sum( ( (b0_S + b1_S * S$V12) - mean(S$V15) )^2 )
SSR_W = sum( ( (b0_W + b1_W * W$V12) - mean(W$V15) )^2 )
nrow(NE)
antable = data.frame(Source = c("Regression", "Error", "Total"),
df = c(1, nrow(NE) - 2, nrow(NE) - 1),
ss = c(SSR_NE, SSE_NE, SSR_NE + SSE_NE),
ms = c(MSR_NE, MSE_NE, NA),
f_val = c(F_NE, NA, NA),
p_val = c(0, NA, NA)
)
# SSRs
SSR_NE = sum( ( (b0_NE + b1_NE * NE$V12) - mean(NE$V15) )^2 )
SSR_NC = sum( ( (b0_NC + b1_NC * NC$V12) - mean(NC$V15) )^2 )
SSR_S = sum( ( (b0_S + b1_S * S$V12) - mean(S$V15) )^2 )
SSR_W = sum( ( (b0_W + b1_W * W$V12) - mean(W$V15) )^2 )
# MSRs
MSR_NE = SSR_NE
MSR_NC = SSR_NC
MSR_S = SSR_S
MSR_W = SSR_W
# F-statistics
F_NE = MSR_NE/MSE_NE
F_NC = MSR_NC/MSE_NC
F_S = MSR_S/MSE_S
F_W = MSR_W/MSE_W
antable = data.frame(Source = c("Regression", "Error", "Total"),
df = c(1, nrow(NE) - 2, nrow(NE) - 1),
ss = c(SSR_NE, SSE_NE, SSR_NE + SSE_NE),
ms = c(MSR_NE, MSE_NE, NA),
f_val = c(F_NE, NA, NA),
p_val = c(0, NA, NA)
)
antable = data.frame(Source = c("Regression", "Error", "Total"),
df = c(1, nrow(NE) - 2, nrow(NE) - 1),
ss = c(SSR_NE, SSE_NE, SSR_NE + SSE_NE),
ms = c(MSR_NE, MSE_NE, NA),
f_val = c(F_NE, NA, NA),
p_val = c(0, NA, NA)
)
kable(antable)
antable = data.frame(Source = c("Regression", "Error", "Total"),
df = c(1, nrow(NE) - 2, nrow(NE) - 1),
ss = c(SSR_NE, SSE_NE, SSR_NE + SSE_NE),
ms = c(MSR_NE, MSE_NE, NA),
f_val = c(F_NE, NA, NA),
p_val = c(0, NA, NA)
)
antable
antable = data.frame(Source = c("Regression", "Error", "Total"),
df = c(1, nrow(NE) - 2, nrow(NE) - 1),
ss = c(SSR_NE, SSE_NE, SSR_NE + SSE_NE),
ms = c(MSR_NE, MSE_NE, NA),
f_val = c(F_NE, NA, NA),
p_val = c(0, NA, NA)
)
library(knitr)
antable
kable(anova)
antable = data.frame(Source = c("Regression", "Error", "Total"),
df = c(1, nrow(NE) - 2, nrow(NE) - 1),
ss = c(SSR_NE, SSE_NE, SSR_NE + SSE_NE),
ms = c(MSR_NE, MSE_NE, NA),
f_val = c(F_NE, NA, NA),
p_val = c(0, NA, NA)
)
library(knitr)
antable
kable(antable)
antable = data.frame(Source = c("Regression", "Error", "Total"),
df = c(1, nrow(NE) - 2, nrow(NE) - 1),
ss = c(SSR_NE, SSE_NE, SSR_NE + SSE_NE),
ms = c(MSR_NE, MSE_NE, NA),
f_val = c(F_NE, NA, NA),
p_val = c(0, NA, NA)
)
anova_table <- function(region, ssr, sse, msr, mse, f, p) {
antable = data.frame(Source = c("Regression", "Error", "Total"),
df = c(1, nrow(region) - 2, nrow(region) - 1),
ss = c(ssr, sse, ssr + sse),
ms = c(msr, mse, NA),
f_val = c(f, NA, NA),
p_val = c(p, NA, NA))
return(antable)
}
kable(anova_table(NE, SSR_NE, SSE_NE, MSR_NE, MSE_NE, F_NE, 0))
library(knitr)
kable(antable)
anova_table <- function(region, ssr, sse, msr, mse, f, p) {
antable = data.frame(Source = c("Regression", "Error", "Total"),
df = c(1, nrow(region) - 2, nrow(region) - 1),
ss = c(ssr, sse, ssr + sse),
ms = c(msr, mse, NA),
f_val = c(f, NA, NA),
p_val = c(p, NA, NA))
return(antable)
}
kable(anova_table(NE, SSR_NE, SSE_NE, MSR_NE, MSE_NE, F_NE, 0))
library(knitr)
# kable(antable)
library(knitr)
kable(anova_table(NE, SSR_NE, SSE_NE, MSR_NE, MSE_NE, F_NE, 0))
library(knitr)
kable(anova_table(NE, SSR_NE, SSE_NE, MSR_NE, MSE_NE, F_NE, p_NE))
p_NE = 1-pf(F_NE,1,nrow(NE)-2)
library(knitr)
kable(anova_table(NE, SSR_NE, SSE_NE, MSR_NE, MSE_NE, F_NE, p_NE))
kable(anova_table(NC, SSR_NC, SSE_NC, MSR_NC, MSE_NC, F_NC, p_NC))
p_NC = 1-pf(F_NC,1,nrow(NC)-2)
kable(anova_table(NC, SSR_NC, SSE_NC, MSR_NC, MSE_NC, F_NC, p_NC))
p_S = 1-pf(F_S,1,nrow(S)-2)
kable(anova_table(S, SSR_S, SSE_S, MSR_S, MSE_S, F_S, p_S))
p_W = 1-pf(F_W,1,nrow(W)-2)
kable(anova_table(W, SSR_W, SSE_W, MSR_W, MSE_W, F_W, p_W))
p(NC)
p_NC
kable(p_NC)
str(p_NC)
kable(anova_table(NC, SSR_NC, SSE_NC, MSR_NC, MSE_NC, F_NC, string(p_NC))
kable(anova_table(NC, SSR_NC, SSE_NC, MSR_NC, MSE_NC, F_NC, string(p_NC)))
kable(anova_table(NC, SSR_NC, SSE_NC, MSR_NC, MSE_NC, F_NC, str(p_NC)))
kable(anova_table(NC, SSR_NC, SSE_NC, MSR_NC, MSE_NC, F_NC, p_NC))
?kable
